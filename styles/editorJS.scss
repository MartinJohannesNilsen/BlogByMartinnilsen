//@import 'katex/dist/katex.min.css';

// editorjs-latex
.math-input-wrapper{display:flex;flex-direction:column;width:100%;padding:5px}.math-preview{min-height:50px;width:100%;padding:10px;border:1px solid #d3d3d3;font-size:20px;text-align:center}.math-preview *{font-family:Katex_Math}.math-input{border:1px solid #d3d3d3;background:0 0;width:100%;padding:10px;margin-top:5px}.errorMessage{color:red}


// Change Case
.change-case-action {
    z-index: 90;
    user-select: none;
    -moz-user-select: none;
    -khtml-user-select: none;
    -webkit-user-select: none;
    -o-user-select: none;    
}
.change-case-tool {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    padding: 5px 10px;
    font-size: 14px;
    line-height: 20px;
    font-weight: 500;
    cursor: pointer;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
}
.change-case-tool:hover {
    background: #eff2f5;
}
.change-case-toolbar__label {
    color: #707684;
    font-size: 11px;
    font-weight: 500;
    letter-spacing: .33px;
    padding: 10px 10px 5px;
    text-transform: uppercase;
    cursor: pointer;
}

.contentEditablePlaceholder::before {
    content: attr(data-placeholder);
    display: inline-block; /* or inline, depending on your layout */
    color: #aaa; /* Placeholder text color */
    /* Additional placeholder styles (e.g., font-style: italic) */
  }

// Editorjs paragraph, user interactable components
// Regular hover color
// .link {
//     color: var(--link-color);
//     text-decoration: none;
//     border-bottom: 2px solid var(--link-border-color);
// }
// .link:hover {
//     border-bottom: 2px solid var(--link-border-hover-color);
// }
// Progress transition
.link {
    position: relative;
    color: var(--link-color);
    text-decoration: none;
}
.link::after {
    content: '';
    position: absolute;
    left: 0;
    bottom: -2px; /* Adjust according to the thickness of the border */
    width: 100%;
    height: 2px;
    background-color: var(--link-border-color);
    transform: scaleX(1);
    transform-origin: left;
}
.link:hover::after {
    background-color: var(--link-border-hover-color);
    animation: expandBorder 0.4s forwards;
}
@keyframes expandBorder {
    from {
        transform: scaleX(0);
    }
    to {
        transform: scaleX(1);
    }
}